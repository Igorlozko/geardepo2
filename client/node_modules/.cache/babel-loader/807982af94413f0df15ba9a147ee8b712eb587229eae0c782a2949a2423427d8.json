{"ast":null,"code":"const fetchData = async ({\n  url,\n  method = 'POST',\n  token = '',\n  body = null\n}, dispatch) => {\n  const headers = token ? {\n    'Content-Type': 'application/json',\n    authorization: `Bearer ${token}`\n  } : {\n    'Content-Type': 'application/json'\n  };\n  body = body ? {\n    body: JSON.stringify(body)\n  } : {};\n  try {\n    const response = await fetch(url, {\n      method,\n      headers,\n      ...body\n    });\n    const data = await response.json();\n    if (!data.success) {\n      if (response.status === 401) dispatch({\n        type: 'UPDATE_USER',\n        payload: null\n      });\n      throw new Error(data.message);\n    }\n    return data.result;\n  } catch (error) {\n    dispatch({\n      type: 'UPDATE_ALERT',\n      payload: {\n        open: true,\n        severity: 'error',\n        message: error.message\n      }\n    });\n    console.log(error);\n    return null;\n  }\n};\nexport default fetchData;","map":{"version":3,"names":["fetchData","url","method","token","body","dispatch","headers","authorization","JSON","stringify","response","fetch","data","json","success","status","type","payload","Error","message","result","error","open","severity","console","log"],"sources":["C:/Users/igorl/Downloads/place-to-stay-part2/client/src/actions/utils/fetchData.js"],"sourcesContent":["\r\n\r\nconst fetchData = async({url,method='POST', token='', body=null}, dispatch)=>{\r\n    const headers = token\r\n    ? {'Content-Type':'application/json', authorization:`Bearer ${token}`}\r\n    : {'Content-Type':'application/json'};\r\n  body = body ? {body: JSON.stringify(body)} : {};\r\n  try{\r\n    const response = await fetch(url, {method, headers, ...body});\r\n    const data = await response.json();\r\n    if(!data.success){\r\n        if(response.status === 401) dispatch({type: 'UPDATE_USER', payload: null});\r\n        throw new Error(data.message);\r\n    }\r\n    return data.result;\r\n  } catch(error){\r\n    dispatch({type:'UPDATE_ALERT', payload: {open:true, severity:'error', message: error.message}})\r\n    console.log(error)\r\n    return null;\r\n  } \r\n};\r\n\r\nexport default fetchData;"],"mappings":"AAEA,MAAMA,SAAS,GAAG,MAAAA,CAAM;EAACC,GAAG;EAACC,MAAM,GAAC,MAAM;EAAEC,KAAK,GAAC,EAAE;EAAEC,IAAI,GAAC;AAAI,CAAC,EAAEC,QAAQ,KAAG;EACzE,MAAMC,OAAO,GAAGH,KAAK,GACnB;IAAC,cAAc,EAAC,kBAAkB;IAAEI,aAAa,EAAE,UAASJ,KAAM;EAAC,CAAC,GACpE;IAAC,cAAc,EAAC;EAAkB,CAAC;EACvCC,IAAI,GAAGA,IAAI,GAAG;IAACA,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI;EAAC,CAAC,GAAG,CAAC,CAAC;EAC/C,IAAG;IACD,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,EAAE;MAACC,MAAM;MAAEI,OAAO;MAAE,GAAGF;IAAI,CAAC,CAAC;IAC7D,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAG,CAACD,IAAI,CAACE,OAAO,EAAC;MACb,IAAGJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAEV,QAAQ,CAAC;QAACW,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAE;MAAI,CAAC,CAAC;MAC1E,MAAM,IAAIC,KAAK,CAACN,IAAI,CAACO,OAAO,CAAC;IACjC;IACA,OAAOP,IAAI,CAACQ,MAAM;EACpB,CAAC,CAAC,OAAMC,KAAK,EAAC;IACZhB,QAAQ,CAAC;MAACW,IAAI,EAAC,cAAc;MAAEC,OAAO,EAAE;QAACK,IAAI,EAAC,IAAI;QAAEC,QAAQ,EAAC,OAAO;QAAEJ,OAAO,EAAEE,KAAK,CAACF;MAAO;IAAC,CAAC,CAAC;IAC/FK,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAClB,OAAO,IAAI;EACb;AACF,CAAC;AAED,eAAerB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}